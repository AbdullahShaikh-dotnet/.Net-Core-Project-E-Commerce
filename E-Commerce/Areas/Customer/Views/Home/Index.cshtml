@model IEnumerable<Product>

@{
	ViewData["Title"] = "Home";
}

<div class="container mx-auto px-4 mt-6 grid grid-cols-1 md:grid-cols-4 gap-6">
	<!-- Sidebar Filters (Desktop) -->
	<aside class="hidden md:block bg-white rounded-md p-5 sticky top-4 h-fit border border-slate-200">
		<h3 class="text-xl font-semibold text-gray-900 mb-4">Filters</h3>

		<!-- Categories -->
		<div class="mb-6 h-full max-h-[500px] grid-1">
			<h4 class="text-md font-semibold text-gray-800 mb-2">Categories</h4>
			<ul class="space-y-2 text-gray-700">
				<li class="cursor-pointer hover:bg-slate-800 hover:text-white rounded-md hover:pl-3 py-1 duration-200 transition-all">Electronics</li>
				<li class="cursor-pointer hover:bg-slate-800 hover:text-white rounded-md hover:pl-3 py-1 duration-200 transition-all">Books</li>
				<li class="cursor-pointer hover:bg-slate-800 hover:text-white rounded-md hover:pl-3 py-1 duration-200 transition-all">Fashion</li>
				<li class="cursor-pointer hover:bg-slate-800 hover:text-white rounded-md hover:pl-3 py-1 duration-200 transition-all">Home & Kitchen</li>
			</ul>
		</div>

		<!-- Price Range -->
		<div class="mb-6">
			<h4 class="text-md font-semibold text-gray-800 mb-2">Price Range</h4>
			<input type="range" min="0" max="1000" class="w-full accent-slate-800">
		</div>

		<!-- Sort By -->
		<div>
			<h4 class="text-md font-semibold text-gray-800 mb-2">Sort By</h4>
			<select class="w-full p-2 border border-gray-300 rounded-lg">
				<option>Price: Low to High</option>
				<option>Price: High to Low</option>
				<option>Newest Arrivals</option>
			</select>
		</div>
	</aside>

	<!-- Mobile Filter Button -->
	<div class="md:hidden">
		<button id="toggleFilter" class="bg-blue-600 text-white px-4 py-2 rounded-lg shadow-md w-full">
			Filters
		</button>
	</div>

	<!-- Mobile Filter Modal -->
	<div id="mobileFilters" class="fixed inset-0 z-50 bg-white transform translate-x-full transition-transform duration-300">
		<div class="p-5 relative">
			<button id="closeFilter" class="absolute top-4 right-4 p-2">
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
					<path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
				</svg>

			</button>
			<h3 class="text-lg font-semibold text-gray-900 mb-3">Filters</h3>
			<ul class="space-y-2 text-gray-700">
				<li class="cursor-pointer hover:text-blue-600 transition">Electronics</li>
				<li class="cursor-pointer hover:text-blue-600 transition">Books</li>
				<li class="cursor-pointer hover:text-blue-600 transition">Fashion</li>
			</ul>
		</div>
	</div>

	<!-- Product Grid -->
	<div class="md:col-span-3 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
		@foreach (var product in Model)
		{
			<a asp-action="Details" asp-controller="Home" asp-route-ProductID="@product.Id" class="block">
				<div class="relative w-full h-60 bg-white border border-b-0 border-slate-200 p-2 pb-0 rounded-t-lg overflow-hidden group">

					@if (product.ListPrice > product.Price)
					{
						<span class="absolute top-2 left-2 bg-red-500 text-white text-[10px] font-semibold px-3 py-1 rounded-full shadow-sm m-2">
							-@(((product.ListPrice - product.Price) / product.ListPrice * 100).ToString("0"))% Off
						</span>
					}


					@if (string.IsNullOrEmpty(product.ImageURL))
					{
						<div class="flex items-center justify-center h-56 bg-gray-200 text-gray-600 text-lg">
							No Media Available
						</div>
					}
					else
					{
						<img src="@product.ImageURL" class="w-full h-full object-cover rounded-md transition-all duration-200">

						<!-- Backdrop -->
						<div class="absolute inset-0 bg-black bg-opacity-60 flex items-center justify-center p-2 m-2 rounded-md mb-0
                        translate-y-full group-hover:translate-y-0 transition-transform duration-200 ease-in-out z-10">
							<span class="text-white text-xs font-semibold line-clamp-6">@Html.Raw(product.Description)</span>
						</div>
					}
				</div>

				<div class="text-left border border-t-0 border-slate-200 rounded-b-md p-2 relative">
					<div class="flex justify-between">

						<h5 class="text-md font-semibold text-gray-700 truncate max-w-[80%] md:max-w-50" title="@product.Title">
							@product.Title
						</h5>



						<div class="absolute right-2 rounded-md bg-slate-100 py-0.2 px-1.5 border border-transparent text-[10px] text-slate-800 transition-all shadow-sm">
							@product.Category.Name
						</div>

					</div>
					<p class="capitalize text-gray-500 text-xs">by @product.Author</p>


						<!-- Price -->
					<div class="flex items-center justify-end">
						<div class="text-lg font-semibold text-gray-700 mb-2">@product.Price.ToString("C")</div>
					</div>


					<div class="flex justify-between">

						<!-- Wishlist Button -->
						<button class="bg-white text-gray-700 p-2 rounded-full border border-slate-300 hover:bg-red-500 hover:border-red-500 hover:text-white transition duration-300 mr-2">
							<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
								<path stroke-linecap="round" stroke-linejoin="round"
									  d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09A5.978 5.978 0 0 1 16.5 3 5.5 5.5 0 0 1 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" />
							</svg>
						</button>

						<!-- Add to Cart Button -->
						<button onclick="addToCart(@product.Id, event)" class="flex items-center rounded-md py-2 px-4 text-center text-sm transition-all shadow-sm
								text-white bg-slate-800 hover:bg-slate-800 focus:text-white focus:bg-slate-800 focus:border-slate-800 w-full flex justify-center
								active:text-white active:bg-slate-700 disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none" type="button">
							Add to cart
							<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 ml-1.5">
								<path stroke-linecap="round" stroke-linejoin="round"
									  d="M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 0 0-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 0 0-16.536-1.84M7.5 14.25 5.106 5.272M6 20.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Zm12.75 0a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z" />
							</svg>
						</button>
					</div>
				</div>
			</a>
		}
	</div>



</div>

<script type="text/javascript">
	document.getElementById("toggleFilter").addEventListener("click", function () {
		document.getElementById("mobileFilters").classList.remove("translate-x-full");
	});

	document.getElementById("closeFilter").addEventListener("click", function () {
		document.getElementById("mobileFilters").classList.add("translate-x-full");
	});

		function addToCart(productId, event) {
		event.preventDefault();
		fetch(`/Customer/Home/AddtoCart?ProductID=${encodeURIComponent(productId)}`, {
			method: 'GET',
			headers: { 'Content-Type': 'application/json' }
		})
		.then(response => response.json())  // Ensure we parse JSON
		.then(data => {
			if (data.success) {
				reloadCartCount();
				toast.success('Item added to cart',5);
			} else {
				console.error('Failed to add product to cart.');
			}
		})
		.catch(error => console.error('Error:', error));
	}


	function reloadCartCount() {
			fetch('/Customer/Home/ReloadCartCount',{
							method: 'GET',
			headers: { 'Content-Type': 'application/json' }
			})
				.then(response => response.text())
				.then(data => {
					document.getElementById('cart-count-LoginPartial').innerHTML = data;
				})
				.catch(error => console.error('Error reloading cart count:', error));
		}

</script>
